@page "/fetchdata"
@using TIEvol.Shared
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<TelerikLoaderContainer OverlayThemeColor="light" Visible="@( !datos )"
                        Text="@null" Class="initial-data-loader">
    <Template>
        <TelerikLoader Size="@LoaderSize.Large" Type="@LoaderType.ConvergingSpinner" ThemeColor="@ThemeColors.Primary" />
    </Template>
</TelerikLoaderContainer>

<TelerikGrid Data="forecasts" Sortable="true" Pageable="true" FilterMode="GridFilterMode.FilterMenu">
    <GridColumns>
        <GridColumn Field="@nameof(WeatherForecast.Date)"></GridColumn>
        <GridColumn Field="@nameof(WeatherForecast.TemperatureC)"
                    Title="Temp (C)"></GridColumn>
        <GridColumn Field="@nameof(WeatherForecast.TemperatureF)"
                    Title="Temp (F)"></GridColumn>
        <GridColumn Field="@nameof(WeatherForecast.Summary)"></GridColumn>
    </GridColumns>
</TelerikGrid>

@code {

    bool datos { get; set; } //

    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("WeatherForecast");
        if (datos == false)
        {
            datos = true;
        }
        await InvokeAsync(StateHasChanged);
    }

}
